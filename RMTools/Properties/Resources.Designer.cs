//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RMTools.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RMTools.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abrir o aplicativo RM.AliasManager.exe.config do ambiente selecionado..
        /// </summary>
        internal static string btnAliasManager {
            get {
                return ResourceManager.GetString("btnAliasManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encerra todos os Hosts e MDI que estiverem em execução no ambiente selecionado . .
        /// </summary>
        internal static string btnEncerraAmbiente {
            get {
                return ResourceManager.GetString("btnEncerraAmbiente", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Iniciar o Host como aplicativo..
        /// </summary>
        internal static string btnHostAppInit {
            get {
                return ResourceManager.GetString("btnHostAppInit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encerrar o Host como aplicativo..
        /// </summary>
        internal static string btnHostAppStop {
            get {
                return ResourceManager.GetString("btnHostAppStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abrir o aplicativo RM.exe.config (nova MDI) do ambiente selecionado..
        /// </summary>
        internal static string btnRmexe {
            get {
                return ResourceManager.GetString("btnRmexe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abrir o aplicativo RM.Host.Service.exe.config do ambiente selecionado..
        /// </summary>
        internal static string btnServiceManager {
            get {
                return ResourceManager.GetString("btnServiceManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Se marcado, a tag EnableCompression estará com o value true..
        /// </summary>
        internal static string chbEnableCompression {
            get {
                return ResourceManager.GetString("chbEnableCompression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Se marcado, a tag EnableDynamicLocalization estará com o value true..
        /// </summary>
        internal static string chbEnableDynamicLocalization {
            get {
                return ResourceManager.GetString("chbEnableDynamicLocalization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Se marcado, a tag JobServer3Camadas estará com o value true..
        /// </summary>
        internal static string chbNCamadas {
            get {
                return ResourceManager.GetString("chbNCamadas", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ao marcar esta opção, será configurado o SmartClient neste ambiente, conforme os parâmetros abaixo..
        /// </summary>
        internal static string chbSmartClient {
            get {
                return ResourceManager.GetString("chbSmartClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quando marcado, este ambiente será configurado como Client, assim, é necessário preencher o campo Host:Port..
        /// </summary>
        internal static string chbUpdateClient {
            get {
                return ResourceManager.GetString("chbUpdateClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Se marcado, este ambiente será configurado como UpdateServer..
        /// </summary>
        internal static string chbUpdateServer {
            get {
                return ResourceManager.GetString("chbUpdateServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Para carregar os configs, selecione o ambiente desejado..
        /// </summary>
        internal static string ConfigNull {
            get {
                return ResourceManager.GetString("ConfigNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Não foi possível excluir o _Broker.dat, verifique se o serviço de host deste ambiente está ativo..
        /// </summary>
        internal static string DeleteBrokerFalse {
            get {
                return ResourceManager.GetString("DeleteBrokerFalse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to _Broker.dar excluído com sucesso..
        /// </summary>
        internal static string DeleteBrokerTrue {
            get {
                return ResourceManager.GetString("DeleteBrokerTrue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Host_Off {
            get {
                object obj = ResourceManager.GetObject("Host_Off", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Host_Off2 {
            get {
                object obj = ResourceManager.GetObject("Host_Off2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Host_On {
            get {
                object obj = ResourceManager.GetObject("Host_On", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Icone_AliasManager {
            get {
                object obj = ResourceManager.GetObject("Icone_AliasManager", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Icone_HostManager {
            get {
                object obj = ResourceManager.GetObject("Icone_HostManager", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Icone_Pasta {
            get {
                object obj = ResourceManager.GetObject("Icone_Pasta", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Icone_RM {
            get {
                object obj = ResourceManager.GetObject("Icone_RM", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap icons8_stop_64 {
            get {
                object obj = ResourceManager.GetObject("icons8-stop-64", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplo clique para carregar as configurações do ambiente..
        /// </summary>
        internal static string lstAmbientes {
            get {
                return ResourceManager.GetString("lstAmbientes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplo clique para abrir o arquivo config..
        /// </summary>
        internal static string lstConfig {
            get {
                return ResourceManager.GetString("lstConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap md_refresh {
            get {
                object obj = ResourceManager.GetObject("md-refresh", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap TxtIconDelete {
            get {
                object obj = ResourceManager.GetObject("TxtIconDelete", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
